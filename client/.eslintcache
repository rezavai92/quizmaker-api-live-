[{"/home/reza/QuizAPI/client/src/index.js":"1","/home/reza/QuizAPI/client/src/App.js":"2","/home/reza/QuizAPI/client/src/reportWebVitals.js":"3","/home/reza/QuizAPI/client/src/contexts/quizContext.js":"4","/home/reza/QuizAPI/client/src/component/Navigation/Header.js":"5","/home/reza/QuizAPI/client/src/component/Questions/questions.js":"6","/home/reza/QuizAPI/client/src/component/LogIn/login.js":"7","/home/reza/QuizAPI/client/src/component/Index/index.js":"8","/home/reza/QuizAPI/client/src/component/QuizMaker/quizmaker.js":"9","/home/reza/QuizAPI/client/src/component/QuizFeed/quizfeed.js":"10","/home/reza/QuizAPI/client/src/component/SignUp/signup.js":"11","/home/reza/QuizAPI/client/src/component/LogIn/error.js":"12","/home/reza/QuizAPI/client/src/component/QuizMaker/testquestion.js":"13","/home/reza/QuizAPI/client/src/component/Question/question.js":"14","/home/reza/QuizAPI/client/src/component/QuizCard/quizcard.js":"15","/home/reza/QuizAPI/client/src/component/Option/option.js":"16","/home/reza/QuizAPI/client/src/component/QuizMaker/viewdetails.js":"17","/home/reza/QuizAPI/client/src/component/QuizMaker/resultQuiz.js":"18"},{"size":500,"mtime":1606648173276,"results":"19","hashOfConfig":"20"},{"size":1506,"mtime":1612588981809,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":6830,"mtime":1612589420570,"results":"23","hashOfConfig":"20"},{"size":1693,"mtime":1612274590285,"results":"24","hashOfConfig":"20"},{"size":4614,"mtime":1612177808024,"results":"25","hashOfConfig":"20"},{"size":3148,"mtime":1612576783333,"results":"26","hashOfConfig":"20"},{"size":505,"mtime":1612544492751,"results":"27","hashOfConfig":"20"},{"size":11809,"mtime":1612589521468,"results":"28","hashOfConfig":"20"},{"size":1575,"mtime":1612274621273,"results":"29","hashOfConfig":"20"},{"size":3146,"mtime":1612092796531,"results":"30","hashOfConfig":"20"},{"size":448,"mtime":1612196092071,"results":"31","hashOfConfig":"20"},{"size":1029,"mtime":1612274674761,"results":"32","hashOfConfig":"20"},{"size":1487,"mtime":1612151909184,"results":"33","hashOfConfig":"20"},{"size":637,"mtime":1612264394315,"results":"34","hashOfConfig":"20"},{"size":2015,"mtime":1612154291051,"results":"35","hashOfConfig":"20"},{"size":3337,"mtime":1612595964776,"results":"36","hashOfConfig":"20"},{"size":2068,"mtime":1612595821854,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"f2pv6n",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/reza/QuizAPI/client/src/index.js",[],["82","83"],"/home/reza/QuizAPI/client/src/App.js",[],"/home/reza/QuizAPI/client/src/reportWebVitals.js",[],"/home/reza/QuizAPI/client/src/contexts/quizContext.js",["84"],"/home/reza/QuizAPI/client/src/component/Navigation/Header.js",["85","86"],"import React,{useContext,useState,useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\n//import axios from 'axios'\r\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n//import {faPaperclip} from '@fortawesome/free-solid-svg-icons'\r\nimport {Navbar,Nav} from 'react-bootstrap'\r\nimport {quizContext} from '../../contexts/quizContext'\r\nconst Navigation = ()=>{\r\n\r\n // console.log(\"from navigation\")\r\n\r\n  const {loginToken,loggedInUserId,confirmLogout} = useContext(quizContext)\r\n  \r\nreturn (<div  >\r\n    <Navbar bg=\"dark\" variant=\"dark\"  expand=\"lg\">\r\n  <Navbar.Brand >Quizophile</Navbar.Brand>\r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link ><Link to=\"/\" style={{color:\"white\"}} >Home</Link></Nav.Link>\r\n      {loginToken?<Nav.Link ><Link to=\"/makequiz\" style={{color:\"white\"}}  >\r\n      Make Quiz\r\n      </Link></Nav.Link>:null }\r\n      <Nav.Link ><Link to=\"/answerquiz\" style={{color:\"white\"}}  >\r\n        Answer Quiz\r\n      </Link></Nav.Link>\r\n     \r\n    </Nav>\r\n     \r\n     {!loginToken?\r\n     <Nav>\r\n      <Nav.Link ><Link to=\"/login\" style={{color:\"white\"}}  >Log In</Link></Nav.Link> \r\n      <Nav.Link  ><Link to=\"/signup\" style={{color:\"white\"}}  >Sign Up</Link></Nav.Link>\r\n      </Nav> \r\n      :\r\n      <Nav>\r\n        <Nav.Link><Link to={`/user/${loggedInUserId}`}\r\n         style={{color:\"white\"}}   >User</Link></Nav.Link>\r\n      <Nav.Link ><Link to=\"/login\" style={{color:\"white\"}}\r\n      onClick={()=>{confirmLogout()}}\r\n       >Log Out </Link></Nav.Link>\r\n      </Nav>\r\n    }\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n    </div>)\r\n\r\n}\r\n\r\nexport default Navigation","/home/reza/QuizAPI/client/src/component/Questions/questions.js",["87","88","89"],"import React ,{useState,useEffect,useContext} from 'react'\r\nimport {quizContext} from '../../contexts/quizContext'\r\nimport {Button,Form,Modal} from 'react-bootstrap'\r\nimport Question from '../Question/question'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {Helmet} from 'react-helmet'\r\nimport axios from 'axios'\r\nimport './questions.css'\r\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons'\r\nconst Questions= ()=>{\r\n\r\n\r\n   const{quizDuration,setQuizTitle,setQuestions,setDuration ,quizTitle,quizDurationChange,questionTextChange,quizTitleChange ,questions,createQuestion,loginToken } = useContext(quizContext);\r\n   const [willShowModal,setWillShowModal] = useState(false)\r\n   \r\n\r\n   const closeModal = ()=>{\r\n\r\n    setWillShowModal(false);\r\n\r\n   }\r\n\r\n\r\n   \r\n   const quizSubmitHandler = (e)=>{\r\n\r\n    e.preventDefault();\r\n    // const postData = async ()=>{\r\n\r\n    //     try{\r\n    //         console.log(\"questions\",questions)\r\n    //       const res=  await axios.post('/quiz',{\r\n\r\n           \r\n    //         title : quizTitle,\r\n    //         questions : questions,\r\n    //         duration: quizDuration\r\n           \r\n\r\n    //       },{headers:{\r\n\r\n    //         xAuthToken:loginToken\r\n    //       }} );\r\n    //       console.log(\"from questions.js,created quiz \",res);\r\n    //       setQuizTitle(\"\")\r\n    //       setQuestions([])\r\n    //       setDuration(\"\")\r\n         \r\n    //     }\r\n    //     catch(error){\r\n\r\n    //         console.log(error)\r\n    //     }\r\n    // }\r\n\r\n    // if(loginToken){\r\n    //     postData()\r\n    // }\r\n\r\n    setWillShowModal(true)\r\n\r\n   }\r\n\r\n   const saveQuizHandler = ()=>{\r\n      const postData = async ()=>{\r\n\r\n        try{\r\n     //       console.log(\"questions\",questions)\r\n          const res=  await axios.post('/quiz',{\r\n\r\n           \r\n            title : quizTitle,\r\n            questions : questions,\r\n            duration: quizDuration\r\n           \r\n\r\n          },{headers:{\r\n\r\n            xAuthToken:loginToken\r\n          }} );\r\n  //        console.log(\"from questions.js,created quiz \",res);\r\n          setQuizTitle(\"\")\r\n          setQuestions([])\r\n          setDuration(null)\r\n          setWillShowModal(false)\r\n         \r\n        }\r\n        catch(error){\r\n\r\n          //  console.log(error)\r\n        }\r\n    }\r\n\r\n    if(loginToken){\r\n        postData()\r\n    }\r\n\r\n   }\r\n\r\n\r\n   return(<div style={{textAlign:\"center\" , marginTop:\"2%\",  }} \r\n   className=\"container \">\r\n\r\n\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Quizophile</title>\r\n                \r\n            </Helmet>\r\n\r\n\r\n<div style={{\r\n    backgroundColor:\"\"\r\n}}  className=\"questions\" >\r\n\r\n\r\n<div className=\"questionModal\" >\r\n<Modal show={willShowModal} \r\nonHide={closeModal} \r\nbackdrop=\"static\"\r\n keyboard={false}\r\nanimation={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Save Quiz</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure ?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={closeModal}>\r\n            Back\r\n          </Button>\r\n          <Button variant=\"primary\"  onClick={saveQuizHandler}  >\r\n            Save\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n</div>\r\n\r\n    {loginToken?\r\n    <div>\r\n\r\n<Button onClick={createQuestion}  variant=\"secondary\" style={{width:\"100%\" , marginBottom:\"2%\"}} >{questions.length>0? \"Add Question\" : \"Start\"} </Button>\r\n\r\n      <Form onSubmit={(e)=>{quizSubmitHandler(e)  } } >\r\n\r\n\r\n      {questions.length> 0? \r\n\r\n<div>\r\n  \r\n    <Form.Group>\r\n    \r\n    <Form.Control type=\"text\" size=\"lg\" \r\n    style={{width:\"100%\"}}\r\n    required={true}\r\n    value={quizTitle} onChange={(e)=>{quizTitleChange(e) }}\r\n    placeholder=\"Quiz Title\" />\r\n    \r\n    </Form.Group>\r\n    <Form.Group>\r\n    \r\n    <Form.Control type=\"number\" \r\n    style={{width:\"100%\"}}\r\n    min={5}\r\n    required={true}\r\n    size=\"sm\"\r\n    value={quizDuration}\r\n    onChange={quizDurationChange}\r\n    placeholder=\"duration\" />\r\n    \r\n    </Form.Group>\r\n</div>\r\n\r\n\r\n    \r\n:null}\r\n\r\n{\r\nquestions.map((q,index)=>{\r\nreturn(<div  key={q.id} >\r\n        <Question\r\n        \r\n        questionNo={index+1}\r\n        textChange={questionTextChange}\r\n        title ={q.title}\r\n        options ={q.options}\r\n        id={q.id}\r\n        ></Question>\r\n\r\n    </div>)\r\n})\r\n\r\n}\r\n{questions.length>0?\r\n\r\n<Button variant=\"secondary\" \r\ntype=\"submit\"\r\nstyle={{width:\"100%\" , marginBottom:\"2%\"}} >Submit</Button> :null\r\n\r\n}\r\n      </Form>\r\n\r\n    </div>\r\n    \r\n    :<Redirect to=\"/\"  /> }\r\n\r\n\r\n</div>\r\n\r\n\r\n   </div>)\r\n   \r\n\r\n}\r\n\r\nexport default Questions","/home/reza/QuizAPI/client/src/component/LogIn/login.js",[],"/home/reza/QuizAPI/client/src/component/Index/index.js",["90"],"import React, {useContext} from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {quizContext} from '../../contexts/quizContext'\r\nimport QuizMaker from '../QuizMaker/quizmaker'\r\nimport Questions from '../Questions/questions'\r\nconst Index = ()=>{\r\n\r\n     const {loginToken} = useContext(quizContext)\r\n    \r\n    console.log('login token is',loginToken)\r\n    return(<div>\r\n\r\n       {loginToken? <Questions/> \r\n    : <Redirect to=\"/login\" /> \r\n\r\n    \r\n    }\r\n    </div>)\r\n}\r\n\r\nexport default Index","/home/reza/QuizAPI/client/src/component/QuizMaker/quizmaker.js",["91","92","93","94","95","96"],"/home/reza/QuizAPI/client/src/component/QuizFeed/quizfeed.js",[],"/home/reza/QuizAPI/client/src/component/SignUp/signup.js",["97","98"],"import React,{useState,useEffect,useContext} from 'react'\r\nimport axios from 'axios'\r\nimport {Form,FormControl,Button} from 'react-bootstrap'\r\nimport {Redirect,withRouter} from 'react-router-dom'\r\nimport {quizContext} from '../../contexts/quizContext'\r\nimport \"./signup.css\"\r\nconst SignUp = (props)=>{\r\n\r\n    \r\n    const [name,setName]=useState(\"\");\r\n    const [email,setEmail] = useState(\"\");\r\n    const[willRedirect,setWillRedirect] = useState(false)\r\n    const[password,setPassword] = useState(\"\");\r\n    const {registerUser,loginToken} = useContext(quizContext);\r\n    const [loggedIn,setLoggedIn] = useState(false)\r\n // console.log(\"from sign up\",loggedIn,loginToken)  \r\n  useEffect(()=>{\r\n\r\n    if(loginToken){\r\n      setLoggedIn(true);\r\n     \r\n    }\r\n   // console.log(\"from signup useEffect\")\r\n  },[loginToken])\r\n\r\n    const nameChangeHandler =(e)=>{\r\n\r\n        setName(e.target.value);\r\n    }\r\n\r\n    const emailChangeHandler = (e)=>{\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const passwordChangeHandler= (e)=>{\r\n\r\n        setPassword(e.target.value)\r\n    }\r\n    const formSubmitHandler = (e)=>{\r\n\r\n        e.preventDefault();\r\n        \r\n        axios.post('/user/register',{\r\n            name,\r\n            email,\r\n            password\r\n        }).then((res)=>{\r\n          registerUser(res.data.token)\r\n        // console.log(res)\r\n         setName(\"\");\r\n         setPassword(\"\");\r\n         setEmail(\"\");\r\n         setWillRedirect(true);\r\n       // props.hisotry.push('/')\r\n        }).catch((err)=>{\r\n          \r\n         // console.log(\"hi\")\r\n         const targetString= String(err).split(\"status code\")[1];\r\n      //   console.log(\"target string\",targetString)\r\n         if(targetString.includes(\"409\")){\r\n\r\n          window.alert(\"validation error, email address already taken. Try with a different email address\")\r\n         }\r\n         else{\r\n           window.alert(\"internal server error\")\r\n         }\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    const render = ()=>{\r\n\r\n      return <Redirect to=\"login\" />\r\n    }\r\nreturn(<div className=\"signup\">\r\n\r\n\r\n{loginToken?<Redirect to=\"/\" /> : \r\n\r\n\r\n   <div> \r\n     <h1>Sign Up</h1>\r\n     \r\n\r\n     <Form action={render} onSubmit={ (e)=>{formSubmitHandler(e)}} >\r\n\r\n\r\n<Form.Group controlId=\"formBasicCheckbox\">\r\n  <Form.Control value ={name} name=\"name\" \r\n  required={true}\r\n  onChange={(e)=>{nameChangeHandler(e)} } \r\n  type=\"text\" placeholder=\"Enter Name\" />\r\n</Form.Group>\r\n\r\n\r\n<Form.Group controlId=\"formBasicEmail\">\r\n  <Form.Control value={email} name=\"email\" required={true} onChange={(e)=>{emailChangeHandler(e)}} type=\"email\" placeholder=\"Enter email\" />\r\n  <Form.Text className=\"text-muted\">\r\n    We'll never share your email with anyone else.\r\n  </Form.Text>\r\n</Form.Group>\r\n\r\n\r\n<Form.Group controlId=\"formBasicPassword\">\r\n  \r\n  <Form.Control type=\"password\" placeholder=\"Password\"\r\n  value={password} required={true} onChange={(e)=>{passwordChangeHandler(e)}}  name=\"password\"\r\n  /></Form.Group>\r\n\r\n<Button variant=\"primary\" type=\"submit\">\r\n  Submit\r\n</Button>\r\n</Form>\r\n   </div>\r\n\r\n}\r\n\r\n{willRedirect? render():null}\r\n\r\n</div>)\r\n\r\n}\r\n\r\nexport default withRouter(SignUp)","/home/reza/QuizAPI/client/src/component/LogIn/error.js",[],"/home/reza/QuizAPI/client/src/component/QuizMaker/testquestion.js",[],"/home/reza/QuizAPI/client/src/component/Question/question.js",["99","100"],"import React ,{useState,useEffect,useContext} from 'react'\r\nimport {quizContext} from '../../contexts/quizContext'\r\nimport {Button,Form} from 'react-bootstrap'\r\nimport Option from '../Option/option'\r\nimport './question.css'\r\nconst Question= (props)=>{\r\n\r\n\r\n   const{optionTextChangeHandler,createOption,deleteQuestionHandler  } = useContext(quizContext);\r\n\r\n   return(<div className=\"jumbotron question\"   >\r\n\r\n\r\n    <div className=\"question-text\" >\r\n\r\n         <h5 style={{color:\"white\"}} >\r\n            {\"#\"+props.questionNo +\".\" }\r\n          </h5>\r\n         <Form.Group>\r\n            \r\n        <Form.Control type=\"text\" size=\"lg\" \r\n        style={{width:\"100%\"}}\r\n        value={props.title} onChange={(e)=>{props.textChange(e,props.id) }}\r\n        required={true}\r\n        placeholder=\"Question\" />\r\n        \r\n        </Form.Group>\r\n    </div>\r\n\r\n  \r\n   \r\n    {props.options.map((o)=>{\r\n\r\n        return(<div key={o.id}>\r\n            \r\n            <Option\r\n            title={o.title}\r\n            \r\n            id={o.id}\r\n            qId={props.id}\r\n            questionId ={props.id}\r\n            optionTextChange={optionTextChangeHandler}\r\n            isCorrect={o.isCorrect}\r\n            ></Option>\r\n            </div>)\r\n    })}\r\n\r\n    <Button  variant=\"danger\" onClick={()=>{deleteQuestionHandler(props.id)}}> Delete Question </Button>\r\n    <Button variant=\"primary\" onClick={()=>{createOption(props.id)} } >Add Option</Button>\r\n\r\n   </div>)\r\n   \r\n\r\n}\r\n\r\nexport default Question","/home/reza/QuizAPI/client/src/component/QuizCard/quizcard.js",["101","102","103"],"import React,{useState,useEffect,useContext} from 'react' \r\nimport {Card,Button} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nconst QuizCard = (props)=>{\r\n\r\n    \r\n    return(<div className=\"quizCard\" >\r\n\r\n\r\n<Card style={{ width: \"100%\" ,margin:\"3% 0%\" }}>\r\n \r\n  <Card.Body>\r\n    <Card.Title>{props.title}</Card.Title>\r\n    <Card.Text>\r\n      duration : {props.duration} min\r\n    </Card.Text>\r\n    <Button variant=\"primary\"  >\r\n\r\n        <Link to={`/takequiz/${props.quizId}`} style={{color:\"white\"}} > \r\n        Start\r\n        </Link>\r\n    </Button>\r\n  </Card.Body>\r\n</Card>\r\n    </div>)\r\n\r\n}\r\n\r\nexport default QuizCard","/home/reza/QuizAPI/client/src/component/Option/option.js",["104","105","106","107"],"import React ,{useState,useEffect,useContext,createRef} from 'react'\r\nimport {quizContext} from '../../contexts/quizContext'\r\nimport {Button,Form} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faTrash,faCheckCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport './option.css'\r\nconst Option = (props)=>{\r\n\r\n   // const [correctButtonText,setCorrectButtonText] =useState(false)\r\n    \r\n    //console.log(\"from option\")\r\n    const {correctOptionChangeHandler,deleteOptionHandler} =useContext(quizContext)\r\n\r\n    \r\n\r\n   return(<div className=\"option-flex\" >\r\n\r\n\r\n       <div className=\"option-text\">\r\n       <Form.Group>\r\n        \r\n        <Form.Control  type=\"text\" placeholder=\"Option\" \r\n        value={props.title}\r\n        required={true}\r\n        style={{width:\"100%\"}}\r\n        onChange={(e)=>{props.optionTextChange(e, props.questionId, props.id)} }\r\n        />\r\n        </Form.Group>\r\n\r\n       </div>\r\n       \r\n       \r\n      <div className=\"optionButton\" > \r\n      <Button  variant=\"danger\"  type=\"button\" \r\n        onClick={()=>{deleteOptionHandler(props.questionId,props.id)}}> \r\n            <FontAwesomeIcon icon={faTrash} color=\"white\"/>\r\n        </Button>  \r\n      </div>\r\n       \r\n      <div>\r\n      <Button className=\"optionButton\" \r\n       variant = \"info\"\r\n       for={props.qId}\r\n       \r\n       >\r\n           \r\n          <input type=\"radio\" className=\"optionRadio\" name={props.qId} id={props.qId} onChange={\r\n\r\n            ()=>{\r\n              correctOptionChangeHandler(props.questionId, props.id)\r\n            }\r\n          } />\r\n           \r\n     </Button>\r\n\r\n      {/* <Button className=\"optionButton\" \r\n       variant ={props.isCorrect?\"success\":\"info\"}\r\n       onClick={()=>{\r\n           \r\n           correctOptionChangeHandler(props.questionId, props.id)\r\n           \r\n           }} >\r\n           \r\n           <FontAwesomeIcon icon={faCheckCircle} /> \r\n           \r\n     </Button> */}\r\n      </div>\r\n   </div>)\r\n}\r\n\r\nexport default Option","/home/reza/QuizAPI/client/src/component/QuizMaker/viewdetails.js",["108","109","110"],"/home/reza/QuizAPI/client/src/component/QuizMaker/resultQuiz.js",["111","112"],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":16,"column":8,"nodeType":"119","messageId":"120","endLine":16,"endColumn":13},{"ruleId":"117","severity":1,"message":"121","line":1,"column":26,"nodeType":"119","messageId":"120","endLine":1,"endColumn":34},{"ruleId":"117","severity":1,"message":"122","line":1,"column":35,"nodeType":"119","messageId":"120","endLine":1,"endColumn":44},{"ruleId":"117","severity":1,"message":"122","line":1,"column":25,"nodeType":"119","messageId":"120","endLine":1,"endColumn":34},{"ruleId":"117","severity":1,"message":"123","line":9,"column":10,"nodeType":"119","messageId":"120","endLine":9,"endColumn":32},{"ruleId":"117","severity":1,"message":"124","line":69,"column":17,"nodeType":"119","messageId":"120","endLine":69,"endColumn":20},{"ruleId":"117","severity":1,"message":"125","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":17},{"ruleId":"117","severity":1,"message":"126","line":10,"column":31,"nodeType":"119","messageId":"120","endLine":10,"endColumn":42},{"ruleId":"117","severity":1,"message":"127","line":20,"column":12,"nodeType":"119","messageId":"120","endLine":20,"endColumn":22},{"ruleId":"117","severity":1,"message":"128","line":20,"column":23,"nodeType":"119","messageId":"120","endLine":20,"endColumn":36},{"ruleId":"117","severity":1,"message":"129","line":28,"column":9,"nodeType":"119","messageId":"120","endLine":28,"endColumn":29},{"ruleId":"130","severity":1,"message":"131","line":65,"column":7,"nodeType":"132","endLine":65,"endColumn":9,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":290,"column":51,"nodeType":"136","messageId":"137","endLine":290,"endColumn":53},{"ruleId":"117","severity":1,"message":"138","line":3,"column":14,"nodeType":"119","messageId":"120","endLine":3,"endColumn":25},{"ruleId":"117","severity":1,"message":"139","line":15,"column":12,"nodeType":"119","messageId":"120","endLine":15,"endColumn":20},{"ruleId":"117","severity":1,"message":"121","line":1,"column":16,"nodeType":"119","messageId":"120","endLine":1,"endColumn":24},{"ruleId":"117","severity":1,"message":"122","line":1,"column":25,"nodeType":"119","messageId":"120","endLine":1,"endColumn":34},{"ruleId":"117","severity":1,"message":"121","line":1,"column":15,"nodeType":"119","messageId":"120","endLine":1,"endColumn":23},{"ruleId":"117","severity":1,"message":"122","line":1,"column":24,"nodeType":"119","messageId":"120","endLine":1,"endColumn":33},{"ruleId":"117","severity":1,"message":"140","line":1,"column":34,"nodeType":"119","messageId":"120","endLine":1,"endColumn":44},{"ruleId":"117","severity":1,"message":"121","line":1,"column":16,"nodeType":"119","messageId":"120","endLine":1,"endColumn":24},{"ruleId":"117","severity":1,"message":"122","line":1,"column":25,"nodeType":"119","messageId":"120","endLine":1,"endColumn":34},{"ruleId":"117","severity":1,"message":"141","line":1,"column":46,"nodeType":"119","messageId":"120","endLine":1,"endColumn":55},{"ruleId":"117","severity":1,"message":"142","line":5,"column":17,"nodeType":"119","messageId":"120","endLine":5,"endColumn":30},{"ruleId":"117","severity":1,"message":"143","line":17,"column":12,"nodeType":"119","messageId":"120","endLine":17,"endColumn":22},{"ruleId":"134","severity":1,"message":"135","line":43,"column":35,"nodeType":"136","messageId":"137","endLine":43,"endColumn":37},{"ruleId":"130","severity":1,"message":"144","line":83,"column":7,"nodeType":"132","endLine":83,"endColumn":9,"suggestions":"145"},{"ruleId":"117","severity":1,"message":"146","line":1,"column":10,"nodeType":"119","messageId":"120","endLine":1,"endColumn":22},{"ruleId":"147","severity":1,"message":"148","line":56,"column":21,"nodeType":"149","endLine":56,"endColumn":39},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'faBatteryThreeQuarters' is defined but never used.","'res' is assigned a value but never used.","'QuizMaker' is defined but never used.","'buildStyles' is defined but never used.","'startAgain' is assigned a value but never used.","'setStartAgain' is assigned a value but never used.","'handleShowResultShow' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["152"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'FormControl' is defined but never used.","'loggedIn' is assigned a value but never used.","'useContext' is defined but never used.","'createRef' is defined but never used.","'faCheckCircle' is defined but never used.","'saveRecord' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'quizId' and 'record.id'. Either include them or remove the dependency array.",["153"],"'faUserSecret' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},"Update the dependencies array to be: [id]",{"range":"158","text":"159"},"Update the dependencies array to be: [quizId, record.id]",{"range":"160","text":"161"},[2225,2227],"[id]",[2481,2483],"[quizId, record.id]"]