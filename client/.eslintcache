[{"/home/reza/QuizAPI/client/src/index.js":"1","/home/reza/QuizAPI/client/src/App.js":"2","/home/reza/QuizAPI/client/src/reportWebVitals.js":"3","/home/reza/QuizAPI/client/src/contexts/quizContext.js":"4","/home/reza/QuizAPI/client/src/component/Navigation/Header.js":"5","/home/reza/QuizAPI/client/src/component/Questions/questions.js":"6","/home/reza/QuizAPI/client/src/component/LogIn/login.js":"7","/home/reza/QuizAPI/client/src/component/Index/index.js":"8","/home/reza/QuizAPI/client/src/component/QuizMaker/quizmaker.js":"9","/home/reza/QuizAPI/client/src/component/QuizFeed/quizfeed.js":"10","/home/reza/QuizAPI/client/src/component/SignUp/signup.js":"11","/home/reza/QuizAPI/client/src/component/LogIn/error.js":"12","/home/reza/QuizAPI/client/src/component/QuizMaker/testquestion.js":"13","/home/reza/QuizAPI/client/src/component/Question/question.js":"14","/home/reza/QuizAPI/client/src/component/QuizCard/quizcard.js":"15","/home/reza/QuizAPI/client/src/component/Option/option.js":"16"},{"size":500,"mtime":1606648173276,"results":"17","hashOfConfig":"18"},{"size":1254,"mtime":1611937179307,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":6539,"mtime":1612077059382,"results":"21","hashOfConfig":"18"},{"size":1804,"mtime":1606823621814,"results":"22","hashOfConfig":"18"},{"size":4414,"mtime":1612077392806,"results":"23","hashOfConfig":"18"},{"size":3145,"mtime":1611938238018,"results":"24","hashOfConfig":"18"},{"size":469,"mtime":1607083726036,"results":"25","hashOfConfig":"18"},{"size":10250,"mtime":1612029359684,"results":"26","hashOfConfig":"18"},{"size":1107,"mtime":1606740281272,"results":"27","hashOfConfig":"18"},{"size":2737,"mtime":1612075810849,"results":"28","hashOfConfig":"18"},{"size":159,"mtime":1605290235831,"results":"29","hashOfConfig":"18"},{"size":1053,"mtime":1612001463716,"results":"30","hashOfConfig":"18"},{"size":1448,"mtime":1612076210632,"results":"31","hashOfConfig":"18"},{"size":631,"mtime":1611992051912,"results":"32","hashOfConfig":"18"},{"size":1619,"mtime":1612075596261,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"f2pv6n",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/reza/QuizAPI/client/src/index.js",[],["75","76"],"/home/reza/QuizAPI/client/src/App.js",["77"],"import React ,  {Component} from 'react';\r\n//import Router from './Components/Router/Router'\r\nimport Navigation from './component/Navigation/Header'\r\n//import Homepage from './component/Homepage/Homepage'\r\nimport ContextProvider from './contexts/quizContext'\r\nimport Questions from './component/Questions/questions'\r\nimport QuizMaker from './component/QuizMaker/quizmaker'\r\nimport {BrowserRouter,Route} from 'react-router-dom'\r\nimport Login from './component/LogIn/login'\r\nimport Index from './component/Index/index'\r\nimport QuizFeed from './component/QuizFeed/quizfeed'\r\nimport SignUp from './component/SignUp/signup'\r\n//import './App.css';\r\n\r\nconst App=()=>  {\r\n\r\n\r\n\r\n\r\n  \r\n\r\nreturn ( \r\n\r\n\r\n<ContextProvider>\r\n<BrowserRouter>   \r\n<Navigation />\r\n        <Route path=\"/\" exact  component={Index} /> \r\n        <Route path=\"/quiz/:id\" exact component ={QuizMaker} />\r\n        <Route path=\"/signup\" exact component={SignUp} />\r\n        <Route path=\"/login\" exact component={Login} />                  \r\n        <Route path =\"/answerquiz\" exact component = {QuizFeed} />\r\n        <Route path='/makequiz' exact component={Questions}></Route>\r\n       \r\n  </BrowserRouter>\r\n</ContextProvider>\r\n       \r\n           \r\n     \r\n\r\n  )\r\n  \r\n}\r\n\r\nexport default App;\r\n","/home/reza/QuizAPI/client/src/reportWebVitals.js",[],"/home/reza/QuizAPI/client/src/contexts/quizContext.js",["78"],"/home/reza/QuizAPI/client/src/component/Navigation/Header.js",["79","80","81","82","83","84","85","86","87"],"import React,{useContext,useState,useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faPaperclip} from '@fortawesome/free-solid-svg-icons'\r\nimport {Navbar,Nav,NavDropdown,Form,FormControl,Button} from 'react-bootstrap'\r\nimport {quizContext} from '../../contexts/quizContext'\r\nconst Navigation = ()=>{\r\n\r\n // console.log(\"from navigation\")\r\n\r\n  const {loginToken,loggedInUserId,confirmLogout} = useContext(quizContext)\r\n  \r\nreturn (<div  >\r\n    <Navbar bg=\"info\" variant=\"dark\"  expand=\"lg\">\r\n  <Navbar.Brand ><h2> Quizophile</h2> </Navbar.Brand>\r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link ><Link to=\"/\" style={{color:\"white\"}} ><h4>Home</h4></Link></Nav.Link>\r\n      {loginToken?<Nav.Link ><Link to=\"/makequiz\" style={{color:\"white\"}}  >\r\n      <h4>Make Quiz</h4>\r\n      </Link></Nav.Link>:null }\r\n      <Nav.Link ><Link to=\"/answerquiz\" style={{color:\"white\"}}  >\r\n        <h4>Answer Quiz</h4>  \r\n      </Link></Nav.Link>\r\n     \r\n    </Nav>\r\n     \r\n     {!loginToken?\r\n     <Nav>\r\n      <Nav.Link ><Link to=\"/login\" style={{color:\"white\"}}  ><h4>Log In</h4></Link></Nav.Link> \r\n      <Nav.Link  ><Link to=\"/signup\" style={{color:\"white\"}}  ><h4>Sign Up</h4></Link></Nav.Link>\r\n      </Nav> \r\n      :\r\n      <Nav>\r\n        <Nav.Link><Link to={`/developer/${loggedInUserId}`}\r\n         style={{color:\"white\"}}   ><h4>User</h4></Link></Nav.Link>\r\n      <Nav.Link ><Link to=\"/login\" style={{color:\"white\"}}\r\n      onClick={()=>{confirmLogout()}}\r\n       ><h4>Log Out </h4></Link></Nav.Link>\r\n      </Nav>\r\n    }\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n    </div>)\r\n\r\n}\r\n\r\nexport default Navigation","/home/reza/QuizAPI/client/src/component/Questions/questions.js",["88","89"],"/home/reza/QuizAPI/client/src/component/LogIn/login.js",["90","91","92"],"import React,{useState,useContext} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nimport axios from 'axios'\r\nimport Navigation from '../Navigation/Header'\r\nimport {Form,ToggleButton,Button} from 'react-bootstrap'\r\nimport {quizContext} from '../../contexts/quizContext'\r\nimport Error from'./error'\r\nimport './login.css'\r\n\r\nconst Login = ()=>{\r\n\r\n    const [email,setEmail]=useState(\"\");\r\n    const[password,setrPassword] = useState(\"\");\r\n    const [redirectHome,setRedirectHome]=useState(false);\r\n    const [redirectError,setRedirectError]=useState(false);\r\n    //const [selectedLoginType,setSelectedLoginType] = useState(\"student\")\r\n    const {loginToken,confirmLogin} = useContext(quizContext)\r\n\r\n    // const radios = [\r\n    //   { name: \"student\", value: \"student\" },\r\n    //   { name: \"user\", value: \"user\" },\r\n      \r\n    // ];\r\n\r\n   // console.log(\"from log in\")\r\n    \r\n    const render = ()=>{\r\n        if(redirectHome)\r\n       {\r\n       return <Redirect to=\"makquiz\" /> \r\n    }\r\n    else if (redirectError){\r\n        return <Redirect to=\"login/error\" />\r\n    }\r\n      }\r\n      \r\n    const emailChangeHandler = (e)=>{\r\n        setEmail(e.target.value)\r\n    }\r\n    const passwordChangeHandler = (e)=>{\r\n\r\n        setrPassword(e.target.value)\r\n    }\r\n\r\n    const formSubmitHandler = async (e)=>{\r\n        e.preventDefault();\r\n\r\n        \r\n        try{\r\n          let loginToken=\"\";\r\n\r\n          \r\n           loginToken=await axios.post('/auth/student',{email,password})\r\n\r\n\r\n          \r\n            \r\n\r\n            // console.log(\"logintoken from login.js\",loginToken.data.token)\r\n\r\n            // const user = await axios.get('/auth',{\r\n\r\n            //     headers:{\r\n            //         xAuthToken:loginToken.data.token\r\n            //     }\r\n            // })\r\n            // console.log(\"user is\",user)\r\n\r\n            confirmLogin(loginToken.data.token,);\r\n            setEmail(\"\");\r\n            setrPassword(\"\");\r\n            setRedirectHome(true);\r\n            setRedirectError(false);\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n            setRedirectHome(false)\r\n            setRedirectError(true)\r\n            \r\n        }\r\n\r\n        \r\n    }\r\n    return(<div className=\"login\">\r\n\r\n    \r\n      {!loginToken?\r\n      <div>\r\n        <h1>Login</h1>\r\n<Form onSubmit={(e)=>{formSubmitHandler(e)}} >\r\n\r\n\r\n\r\n  <Form.Group controlId=\"formBasicEmail\">\r\n\r\n    <Form.Label>Email address</Form.Label>\r\n    <Form.Control type=\"email\" value={email} required={true} onChange={(e)=>{emailChangeHandler(e)}} placeholder=\"Enter email\" />\r\n    <Form.Text className=\"text-muted\">\r\n      We'll never share your email with anyone else.\r\n    </Form.Text>\r\n  </Form.Group>\r\n\r\n  <Form.Group controlId=\"formBasicPassword\">\r\n    <Form.Label>Password</Form.Label>\r\n    <Form.Control type=\"password\" required={true} placeholder=\"Password\"\r\n     value={password} onChange ={(e)=>{passwordChangeHandler(e)}} />\r\n  </Form.Group>\r\n  \r\n  \r\n \r\n\r\n\r\n  <Button variant=\"primary\" type=\"submit\">\r\n    Log In\r\n  </Button>\r\n</Form>\r\n{render()}\r\n        </div>\r\n    \r\n    : <Redirect  to =\"/\" />\r\n    }\r\n    </div>)\r\n}\r\n\r\nexport default Login","/home/reza/QuizAPI/client/src/component/Index/index.js",["93","94"],"import React, { useState ,useContext, useEffect} from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {quizContext} from '../../contexts/quizContext'\r\nimport Login from '../LogIn/login'\r\n\r\nconst Index = ()=>{\r\n\r\n     const {loginToken} = useContext(quizContext)\r\n    \r\n    console.log('login token is',loginToken)\r\n    return(<div>\r\n\r\n       {loginToken? <Redirect to=\"/makequiz\" /> \r\n    : <Login /> \r\n\r\n    \r\n    }\r\n    </div>)\r\n}\r\n\r\nexport default Index","/home/reza/QuizAPI/client/src/component/QuizMaker/quizmaker.js",["95","96","97","98","99","100","101","102"],"import React ,{useContext,useState,useEffect} from 'react'\r\nimport {quizContext} from '../../contexts/quizContext'\r\nimport {Modal,Button,Spinner} from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport './quizMaker.css'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport Timer from 'react-compound-timer'\r\nimport { CircularProgressbar ,buildStyles} from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nimport TestQuestion from './testquestion'\r\nconst QuizMaker = ()=>{\r\n\r\n   \r\n    const [quiz,setQuiz] = useState({title:\"\",duration:\"\",questions:[],author:\"\" });\r\n    const path =window.location.pathname;\r\n    const [startAgain,setStartAgain] = useState(false)\r\n    const [willShowResultModal, setWillShowResultModal] = useState(false);\r\n\r\n  const handleShowResultClose = () => {\r\n    \r\n    setWillShowResultModal(false);\r\n    closeModal();\r\n   } ;\r\n  const handleShowResultShow = () => setWillShowResultModal(true);\r\n\r\n    const [willShowModal,setWillShowModal] = useState(true)\r\n    const [willStartTest,setWillStartTest] = useState(false)\r\n    const [willTakeBack,setWillTakeBack] =useState(false);\r\n    const[quizSubmissionSpins,setQuizSubmissionSpins]= useState(false);\r\n    const [answerSheet,setAnswerSheet] = useState([]);\r\n    const [obtainedMarks,setObtainedMarks] = useState(0);\r\n    const[totalMarks,setTotalMarks] = useState(0);\r\n    const[willShowTimeupModal ,setWillShowTimeupModal] = useState(false)\r\n    const pathsep= path.split(\"/\");\r\n\r\n    //console.log(pathsep)\r\n   const id = pathsep[2] ;\r\n    useEffect(()=>{\r\n\r\n        const getQuiz = async ()=>{\r\n\r\n            try{\r\n\r\n                const quizContent = await axios.get(`/quiz/${id}`);\r\n\r\n                setQuiz(quizContent.data)\r\n                console.log(\"quiz content \",quizContent);\r\n            }\r\n\r\n            catch(error){\r\n\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        getQuiz();\r\n    },[])\r\n\r\n    const takeBack = ()=>{\r\n\r\n        setWillTakeBack(true)\r\n    }\r\n\r\n\r\n    //get trail color,textcolor for score\r\n\r\n    const getScoreFeatures=(score,total)=>{\r\n\r\n        const ratio = (score/total);\r\n        let feedback=\"\";\r\n        let trailColor =\"\";\r\n        if( ratio===1 ){\r\n\r\n          feedback=\"Master!\";\r\n          trailColor=\"#ff3dd2\"\r\n        }\r\n        else if ( ratio>=.8){\r\n          feedback =\"Excellent!\";\r\n          trailColor =\"#3da5ff\"\r\n\r\n        }\r\n        \r\n      else  if(ratio>0.65){\r\n          feedback=\"Well Done!\"\r\n          trailColor=\"#3da5ff\"\r\n        }\r\n        else  if(ratio>=0.5){\r\n          feedback=\"Good!\"\r\n          trailColor=\"#3da5ff\"\r\n        }\r\n        \r\n        else {\r\n          feedback=\"Try Again!\"\r\n          trailColor=\"red\"\r\n        }\r\n\r\n        return{feedback,trailColor}\r\n    }\r\n    \r\n    const startTestHandler = ()=>{\r\n        setWillShowModal(false)\r\n        setWillStartTest(true)\r\n    }\r\n   const closeTimeupModal= ()=>{\r\n        setWillShowTimeupModal(false);\r\n        takeBack();\r\n\r\n    }\r\n    const closeModal = ()=>{\r\n        setWillShowModal(false)\r\n        takeBack();\r\n    }\r\n\r\n    const quizSubmitHandler=()=>{\r\n\r\n      setWillShowResultModal(true)\r\n      setQuizSubmissionSpins(true)\r\n      const postData =async ()=>{\r\n\r\n\r\n        try{\r\n          const res= await axios.post(`/quiz/evaluation/${id}`,{answerSheet})\r\n          setQuizSubmissionSpins(false)\r\n        \r\n          console.log(res.data);\r\n          setObtainedMarks(res.data.marksObtained);\r\n          setTotalMarks(res.data.total);\r\n          setAnswerSheet([]);\r\n          setWillStartTest(false);\r\n          \r\n        }\r\n        catch(error){\r\n          setQuizSubmissionSpins(false);\r\n         \r\n          throw error;\r\n        }\r\n\r\n      }\r\n     setTimeout(()=>{\r\n      postData();\r\n\r\n     },1000)\r\n    }\r\n    console.log(\"answers sheets\",answerSheet);\r\n\r\n\r\n\r\n    return(<div className=\"container quizmaker \" >\r\n\r\n        {willTakeBack?<Redirect to=\"/answerquiz\" /> : null}\r\n\r\n      {willShowModal?\r\n      \r\n    <div>\r\n        <Modal show={willShowModal} \r\n            onHide={closeModal} \r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            animation={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Reminder!</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you ready to take this test? </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={closeModal}>\r\n            Go Back\r\n          </Button>\r\n          <Button variant=\"primary\" onClick ={startTestHandler} >\r\n            Start\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div> :\r\n    null\r\n    }\r\n\r\n{willShowTimeupModal?\r\n      \r\n      <div>\r\n          <Modal show={willShowTimeupModal} \r\n              onHide={closeTimeupModal} \r\n              backdrop=\"static\"\r\n              keyboard={false}\r\n              animation={false}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Finshed!</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Your Thank you for participating </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={closeTimeupModal}>\r\n              Close\r\n            </Button>\r\n            \r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div> :\r\n      null\r\n      }\r\n  \r\n\r\n    {willStartTest?\r\n        <div>\r\n            <div className =\"quizHeader\">\r\n                <h2> <span>Title : </span> {quiz.title}</h2>\r\n              \r\n                <Timer\r\n                initialTime={quiz.duration*60*1000}\r\n                direction=\"backward\"\r\n                checkpoints={[\r\n                    {\r\n                        time: 0,\r\n                        callback: () =>{\r\n                            \r\n                            \r\n                            setQuiz({});\r\n                            setWillShowTimeupModal(true);\r\n                            setWillStartTest(false);\r\n                        \r\n                        },\r\n                            \r\n\r\n\r\n\r\n                    }\r\n                   \r\n                ]}\r\n                 >\r\n                {() => (\r\n                    <h4 style={{color:\"red\"}} >\r\n                       <span style={{fontWeight:\"normal\"}} >   Time Remaining : {\" \"}</span>\r\n                        <Timer.Hours /> : \r\n                        <Timer.Minutes /> : \r\n                        <Timer.Seconds />\r\n                        \r\n                    </h4>\r\n                    \r\n                )}\r\n              </Timer>\r\n              \r\n                <p style={{color:\"#4287f5\"}} > <em style={{color:\"#24354f\"}} >Prepared by : </em> {quiz.author } </p>\r\n            </div>\r\n           {quiz.questions?\r\n             <div className=\"questionFlex\" >\r\n             {quiz.questions.map((question,index)=>{\r\n                 return(<div key={question._id} > \r\n                             <TestQuestion questionNo={index+1} \r\n                                 options ={question.options}\r\n                                 title ={question.title}\r\n                                 questionId={question._id}\r\n                                 selectedOptionHandler={(selectedOptionId)=>{\r\n                                   const queId =question._id;\r\n                                  const answers= [...answerSheet];\r\n                                const foundQuestion=  answers.find((a)=>{\r\n                                    return a.question_id===queId;\r\n                                  })\r\n                                  if(foundQuestion!=undefined){\r\n                                   const queIndex= answers.findIndex((a)=>{\r\n                                      return a.question_id===queId;\r\n                                    });\r\n                                    if(queIndex>=0){\r\n                                      answers[queIndex]={question_id :queId, selectedOption:selectedOptionId}\r\n                                      \r\n                                    }\r\n                                  }\r\n                                  else{\r\n                                    answers.push({question_id :queId, selectedOption:selectedOptionId})\r\n                                  }\r\n                                  setAnswerSheet(answers);\r\n                                  \r\n                                 } }\r\n                             />\r\n                         </div>\r\n                     )\r\n             }) } \r\n\r\n             <div style={{textAlign:\"center\"}} > \r\n               <Button variant=\"success\" \r\n               onClick={()=>{\r\n\r\n              quizSubmitHandler();\r\n               }}\r\n               >Submit</Button> \r\n               </div>\r\n         </div> :null   \r\n        }\r\n        </div>   : null \r\n    }\r\n\r\n{/* Result Pop Up Modal */}\r\n\r\n{\r\n willShowResultModal?\r\n\r\n\r\n <div className=\"submit-spinner\" >\r\n  \r\n  <Modal show={willShowResultModal} onHide={handleShowResultClose} >\r\n\r\n      <Modal.Header closeButton >\r\n        {!quizSubmissionSpins? <h4 style={{marginLeft:\"40%\",color:\"#3da5ff\"}}>\r\n\r\n         { getScoreFeatures(obtainedMarks,totalMarks).feedback}\r\n        </h4> :null}\r\n      </Modal.Header>\r\n        <Modal.Body>\r\n          \r\n        {quizSubmissionSpins?         \r\n        <div style={{textAlign:\"center\" ,padding:\"10%\" }}>\r\n         <p>\r\n           Processing...\r\n         </p>\r\n        <Spinner animation=\"border\" variant=\"success\" />\r\n        </div>: <div style={{textAlign:\"center\" ,padding:\"10%\" }} >\r\n        <CircularProgressbar value={(obtainedMarks/totalMarks)*100} \r\n        \r\n        text={obtainedMarks+\"/\"+totalMarks} />;\r\n        </div> \r\n        \r\n        \r\n        }\r\n        </Modal.Body>\r\n        {!quizSubmissionSpins ?\r\n        <Modal.Footer>\r\n            <Button variant=\"warning\" onClick={()=>{\r\n\r\n              \r\n              setWillShowResultModal(false)\r\n              setWillStartTest(true)\r\n             \r\n              //setStartAgain(true);\r\n            }} >\r\n              Try Again\r\n            </Button>\r\n            <Button variant=\"info\" onClick={handleShowResultClose}  >\r\n              Home\r\n            </Button>\r\n        </Modal.Footer>\r\n        :null}\r\n        \r\n      </Modal>\r\n   </div>\r\n  \r\n : null\r\n}\r\n\r\n\r\n\r\n\r\n    </div>)\r\n\r\n}\r\n\r\nexport default QuizMaker","/home/reza/QuizAPI/client/src/component/QuizFeed/quizfeed.js",["103","104"],"import React ,{useContext,useState,useEffect} from 'react'\r\nimport {quizContext} from '../../contexts/quizContext'\r\nimport QuizCard from '../QuizCard/quizcard'\r\nimport './quizFeed.css'\r\nimport axios from 'axios'\r\nconst QuizFeed = ()=>{\r\n\r\n   \r\n    const [quizzes,setQuizzes] = useState([{title:\"\",questions:[],duration:\"\"}]);\r\n\r\n    useEffect(()=>{\r\n\r\n        console.log(\"from quiz feed\")\r\n        const getQuiz = async ()=>{\r\n\r\n            try{\r\n\r\n                const quizContent = await axios.get('/quiz');\r\n                console.log(\"quiz content \",quizContent);\r\n                setQuizzes(quizContent.data);\r\n\r\n            }\r\n\r\n            catch(error){\r\n\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        getQuiz();\r\n    },[])\r\n\r\n\r\n    return(<div className=\"container quizFlex\" >\r\n\r\n\r\n        {quizzes.map((q)=>{\r\n\r\n            return(<QuizCard \r\n                title={q.title} \r\n                duration ={q.duration}\r\n                quizId ={q._id}\r\n                key={q._id}\r\n                \r\n            >\r\n\r\n            </QuizCard>)\r\n        })}\r\n\r\n    </div>)\r\n\r\n}\r\n\r\nexport default QuizFeed","/home/reza/QuizAPI/client/src/component/SignUp/signup.js",["105"],"/home/reza/QuizAPI/client/src/component/LogIn/error.js",[],"/home/reza/QuizAPI/client/src/component/QuizMaker/testquestion.js",["106","107","108","109","110","111","112","113"],"import React ,{useContext,useState,useEffect} from 'react'\r\nimport {quizContext} from '../../contexts/quizContext'\r\nimport {Modal,Button} from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport { Redirect } from 'react-router-dom'\r\nimport './testQuestion.css'\r\n\r\nconst TestQuestion = (props)=>{\r\n\r\nreturn(<div>\r\n\r\n    <div className=\"test-question\" >\r\n        <h3>{props.questionNo +\". \"+ props.title  } </h3>\r\n    </div>\r\n\r\n    <div className=\"test-question-option\" >\r\n\r\n\r\n        {props.options.map((option,index)=>{\r\n\r\n            return(<div key={option._id}>\r\n                    <input type=\"radio\" \r\n                    onChange={()=>{props.selectedOptionHandler(option._id)  } }\r\n                    id={option._id}\r\n                    \r\n                    value={option._id} name={props.questionId}  />     \r\n                    <label for={option._id}  > {\" \"+option.title}\r\n                    \r\n                     </label>              \r\n                </div>)\r\n        })}\r\n    </div>\r\n\r\n</div>)\r\n\r\n}\r\n\r\n\r\nexport default TestQuestion","/home/reza/QuizAPI/client/src/component/Question/question.js",["114","115"],"/home/reza/QuizAPI/client/src/component/QuizCard/quizcard.js",["116","117","118"],"import React,{useState,useEffect,useContext} from 'react' \r\nimport {Card,Button} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nconst QuizCard = (props)=>{\r\n\r\n    \r\n    return(<div className=\"quizCard\" >\r\n\r\n<Card style={{ width: \"100%\" ,margin:\"3% 0%\" }}>\r\n \r\n  <Card.Body>\r\n    <Card.Title>{props.title}</Card.Title>\r\n    <Card.Text>\r\n      duration : {props.duration} min\r\n    </Card.Text>\r\n    <Button variant=\"primary\"  >\r\n\r\n        <Link to={`/quiz/${props.quizId}`} style={{color:\"white\"}} > \r\n        Start\r\n        </Link>\r\n    </Button>\r\n  </Card.Body>\r\n</Card>\r\n    </div>)\r\n\r\n}\r\n\r\nexport default QuizCard","/home/reza/QuizAPI/client/src/component/Option/option.js",["119","120","121"],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":1,"column":18,"nodeType":"128","messageId":"129","endLine":1,"endColumn":27},{"ruleId":"126","severity":1,"message":"130","line":15,"column":12,"nodeType":"128","messageId":"129","endLine":15,"endColumn":17},{"ruleId":"126","severity":1,"message":"131","line":1,"column":26,"nodeType":"128","messageId":"129","endLine":1,"endColumn":34},{"ruleId":"126","severity":1,"message":"132","line":1,"column":35,"nodeType":"128","messageId":"129","endLine":1,"endColumn":44},{"ruleId":"126","severity":1,"message":"133","line":3,"column":8,"nodeType":"128","messageId":"129","endLine":3,"endColumn":13},{"ruleId":"126","severity":1,"message":"134","line":4,"column":10,"nodeType":"128","messageId":"129","endLine":4,"endColumn":25},{"ruleId":"126","severity":1,"message":"135","line":5,"column":9,"nodeType":"128","messageId":"129","endLine":5,"endColumn":20},{"ruleId":"126","severity":1,"message":"136","line":6,"column":20,"nodeType":"128","messageId":"129","endLine":6,"endColumn":31},{"ruleId":"126","severity":1,"message":"137","line":6,"column":32,"nodeType":"128","messageId":"129","endLine":6,"endColumn":36},{"ruleId":"126","severity":1,"message":"138","line":6,"column":37,"nodeType":"128","messageId":"129","endLine":6,"endColumn":48},{"ruleId":"126","severity":1,"message":"139","line":6,"column":49,"nodeType":"128","messageId":"129","endLine":6,"endColumn":55},{"ruleId":"126","severity":1,"message":"132","line":1,"column":25,"nodeType":"128","messageId":"129","endLine":1,"endColumn":34},{"ruleId":"126","severity":1,"message":"140","line":8,"column":10,"nodeType":"128","messageId":"129","endLine":8,"endColumn":32},{"ruleId":"126","severity":1,"message":"141","line":5,"column":8,"nodeType":"128","messageId":"129","endLine":5,"endColumn":18},{"ruleId":"126","severity":1,"message":"142","line":6,"column":14,"nodeType":"128","messageId":"129","endLine":6,"endColumn":26},{"ruleId":"126","severity":1,"message":"143","line":8,"column":8,"nodeType":"128","messageId":"129","endLine":8,"endColumn":13},{"ruleId":"126","severity":1,"message":"131","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":25},{"ruleId":"126","severity":1,"message":"132","line":1,"column":39,"nodeType":"128","messageId":"129","endLine":1,"endColumn":48},{"ruleId":"126","severity":1,"message":"144","line":1,"column":16,"nodeType":"128","messageId":"129","endLine":1,"endColumn":26},{"ruleId":"126","severity":1,"message":"145","line":2,"column":9,"nodeType":"128","messageId":"129","endLine":2,"endColumn":20},{"ruleId":"126","severity":1,"message":"146","line":9,"column":31,"nodeType":"128","messageId":"129","endLine":9,"endColumn":42},{"ruleId":"126","severity":1,"message":"147","line":18,"column":12,"nodeType":"128","messageId":"129","endLine":18,"endColumn":22},{"ruleId":"126","severity":1,"message":"148","line":18,"column":23,"nodeType":"128","messageId":"129","endLine":18,"endColumn":36},{"ruleId":"126","severity":1,"message":"149","line":26,"column":9,"nodeType":"128","messageId":"129","endLine":26,"endColumn":29},{"ruleId":"150","severity":1,"message":"151","line":61,"column":7,"nodeType":"152","endLine":61,"endColumn":9,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":260,"column":51,"nodeType":"156","messageId":"157","endLine":260,"endColumn":53},{"ruleId":"126","severity":1,"message":"144","line":1,"column":16,"nodeType":"128","messageId":"129","endLine":1,"endColumn":26},{"ruleId":"126","severity":1,"message":"145","line":2,"column":9,"nodeType":"128","messageId":"129","endLine":2,"endColumn":20},{"ruleId":"126","severity":1,"message":"138","line":3,"column":14,"nodeType":"128","messageId":"129","endLine":3,"endColumn":25},{"ruleId":"126","severity":1,"message":"144","line":1,"column":16,"nodeType":"128","messageId":"129","endLine":1,"endColumn":26},{"ruleId":"126","severity":1,"message":"131","line":1,"column":27,"nodeType":"128","messageId":"129","endLine":1,"endColumn":35},{"ruleId":"126","severity":1,"message":"132","line":1,"column":36,"nodeType":"128","messageId":"129","endLine":1,"endColumn":45},{"ruleId":"126","severity":1,"message":"145","line":2,"column":9,"nodeType":"128","messageId":"129","endLine":2,"endColumn":20},{"ruleId":"126","severity":1,"message":"158","line":3,"column":9,"nodeType":"128","messageId":"129","endLine":3,"endColumn":14},{"ruleId":"126","severity":1,"message":"139","line":3,"column":15,"nodeType":"128","messageId":"129","endLine":3,"endColumn":21},{"ruleId":"126","severity":1,"message":"133","line":4,"column":8,"nodeType":"128","messageId":"129","endLine":4,"endColumn":13},{"ruleId":"126","severity":1,"message":"159","line":5,"column":10,"nodeType":"128","messageId":"129","endLine":5,"endColumn":18},{"ruleId":"126","severity":1,"message":"131","line":1,"column":16,"nodeType":"128","messageId":"129","endLine":1,"endColumn":24},{"ruleId":"126","severity":1,"message":"132","line":1,"column":25,"nodeType":"128","messageId":"129","endLine":1,"endColumn":34},{"ruleId":"126","severity":1,"message":"131","line":1,"column":15,"nodeType":"128","messageId":"129","endLine":1,"endColumn":23},{"ruleId":"126","severity":1,"message":"132","line":1,"column":24,"nodeType":"128","messageId":"129","endLine":1,"endColumn":33},{"ruleId":"126","severity":1,"message":"144","line":1,"column":34,"nodeType":"128","messageId":"129","endLine":1,"endColumn":44},{"ruleId":"126","severity":1,"message":"131","line":1,"column":16,"nodeType":"128","messageId":"129","endLine":1,"endColumn":24},{"ruleId":"126","severity":1,"message":"132","line":1,"column":25,"nodeType":"128","messageId":"129","endLine":1,"endColumn":34},{"ruleId":"126","severity":1,"message":"160","line":1,"column":46,"nodeType":"128","messageId":"129","endLine":1,"endColumn":55},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faPaperclip' is defined but never used.","'NavDropdown' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'faBatteryThreeQuarters' is defined but never used.","'Navigation' is defined but never used.","'ToggleButton' is defined but never used.","'Error' is defined but never used.","'useContext' is defined but never used.","'quizContext' is defined but never used.","'buildStyles' is defined but never used.","'startAgain' is assigned a value but never used.","'setStartAgain' is assigned a value but never used.","'handleShowResultShow' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["163"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Modal' is defined but never used.","'Redirect' is defined but never used.","'createRef' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},"Update the dependencies array to be: [id]",{"range":"166","text":"167"},[1918,1920],"[id]"]