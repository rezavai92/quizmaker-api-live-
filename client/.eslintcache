[{"/home/reza/QuizAPI/client/src/index.js":"1","/home/reza/QuizAPI/client/src/App.js":"2","/home/reza/QuizAPI/client/src/reportWebVitals.js":"3","/home/reza/QuizAPI/client/src/contexts/quizContext.js":"4","/home/reza/QuizAPI/client/src/component/Navigation/Header.js":"5","/home/reza/QuizAPI/client/src/component/Questions/questions.js":"6","/home/reza/QuizAPI/client/src/component/LogIn/login.js":"7","/home/reza/QuizAPI/client/src/component/Index/index.js":"8","/home/reza/QuizAPI/client/src/component/QuizMaker/quizmaker.js":"9","/home/reza/QuizAPI/client/src/component/QuizFeed/quizfeed.js":"10","/home/reza/QuizAPI/client/src/component/SignUp/signup.js":"11","/home/reza/QuizAPI/client/src/component/LogIn/error.js":"12","/home/reza/QuizAPI/client/src/component/QuizMaker/testquestion.js":"13","/home/reza/QuizAPI/client/src/component/Question/question.js":"14","/home/reza/QuizAPI/client/src/component/QuizCard/quizcard.js":"15","/home/reza/QuizAPI/client/src/component/Option/option.js":"16"},{"size":500,"mtime":1606648173276,"results":"17","hashOfConfig":"18"},{"size":1254,"mtime":1611937179307,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":6421,"mtime":1606824810059,"results":"21","hashOfConfig":"18"},{"size":1804,"mtime":1606823621814,"results":"22","hashOfConfig":"18"},{"size":3759,"mtime":1606824870665,"results":"23","hashOfConfig":"18"},{"size":3145,"mtime":1611938238018,"results":"24","hashOfConfig":"18"},{"size":469,"mtime":1607083726036,"results":"25","hashOfConfig":"18"},{"size":10250,"mtime":1612029359684,"results":"26","hashOfConfig":"18"},{"size":1107,"mtime":1606740281272,"results":"27","hashOfConfig":"18"},{"size":2714,"mtime":1611938580807,"results":"28","hashOfConfig":"18"},{"size":159,"mtime":1605290235831,"results":"29","hashOfConfig":"18"},{"size":1053,"mtime":1612001463716,"results":"30","hashOfConfig":"18"},{"size":1423,"mtime":1607150208812,"results":"31","hashOfConfig":"18"},{"size":631,"mtime":1611992051912,"results":"32","hashOfConfig":"18"},{"size":1594,"mtime":1606718033755,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"f2pv6n",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"36"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"36"},"/home/reza/QuizAPI/client/src/index.js",[],["79","80"],"/home/reza/QuizAPI/client/src/App.js",["81"],"import React ,  {Component} from 'react';\r\n//import Router from './Components/Router/Router'\r\nimport Navigation from './component/Navigation/Header'\r\n//import Homepage from './component/Homepage/Homepage'\r\nimport ContextProvider from './contexts/quizContext'\r\nimport Questions from './component/Questions/questions'\r\nimport QuizMaker from './component/QuizMaker/quizmaker'\r\nimport {BrowserRouter,Route} from 'react-router-dom'\r\nimport Login from './component/LogIn/login'\r\nimport Index from './component/Index/index'\r\nimport QuizFeed from './component/QuizFeed/quizfeed'\r\nimport SignUp from './component/SignUp/signup'\r\n//import './App.css';\r\n\r\nconst App=()=>  {\r\n\r\n\r\n\r\n\r\n  \r\n\r\nreturn ( \r\n\r\n\r\n<ContextProvider>\r\n<BrowserRouter>   \r\n<Navigation />\r\n        <Route path=\"/\" exact  component={Index} /> \r\n        <Route path=\"/quiz/:id\" exact component ={QuizMaker} />\r\n        <Route path=\"/signup\" exact component={SignUp} />\r\n        <Route path=\"/login\" exact component={Login} />                  \r\n        <Route path =\"/answerquiz\" exact component = {QuizFeed} />\r\n        <Route path='/makequiz' exact component={Questions}></Route>\r\n       \r\n  </BrowserRouter>\r\n</ContextProvider>\r\n       \r\n           \r\n     \r\n\r\n  )\r\n  \r\n}\r\n\r\nexport default App;\r\n","/home/reza/QuizAPI/client/src/reportWebVitals.js",[],"/home/reza/QuizAPI/client/src/contexts/quizContext.js",["82"],"import React , {createContext,useState,useEffect} from 'react'\r\nimport Cookies from 'js-cookie'\r\nimport axios from 'axios'\r\nexport const quizContext = createContext();\r\nconst ContextProvider = (props)=>{\r\n\r\n\r\n   \r\n    const [quizTitle,setQuizTitle] = useState(\"\")\r\n    const [questions,setQuestions] = useState([])\r\n    const [duration,setDuration] = useState(\"\")\r\n\r\n\r\n\r\n    const [token,setToken] =useState(\"\");\r\nconst[loggedInUserId,setLoggedInUserId]=useState(null)\r\nconst[loginToken,setLoginToken] = useState(\"\");\r\n//console.log(\"from context\")\r\n\r\n\r\nuseEffect(()=>{\r\n\r\nsetLoginToken(Cookies.get(\"token\"))\r\nsetLoggedInUserId(Cookies.get(\"user\"))\r\n},[])\r\nconst registerUser = (token)=>{\r\n\r\n    setToken(token);\r\n\r\n}\r\n\r\nconst confirmLogin = (token,loggedInUserId)=>{\r\n\r\n    setLoginToken(token);\r\n    setLoggedInUserId(loggedInUserId)\r\n\r\n}\r\nconst confirmLogout = ()=>{\r\n    \r\n    async function fetch (){\r\n\r\n        try{\r\n            await axios.get('/auth/logout',\r\n           {headers:{\r\n               xAuthToken :loginToken\r\n           }} ,\r\n            )\r\n            setLoginToken(Cookies.get(\"token\"))\r\n            setLoggedInUserId(Cookies.get(\"user\"))\r\n            setQuizTitle(\"\")\r\n            setQuestions([])\r\n            setDuration([])\r\n            \r\n        }\r\n        catch(err){\r\n\r\n\r\n        }\r\n    }\r\n    fetch()\r\n\r\n    }\r\n    //quiz title change\r\n    const quizDurationChange = (e)=>{\r\n\r\n        setDuration(e.target.value)\r\n    }\r\n    const quizTitleChange = (e)=>{\r\n\r\n        setQuizTitle(e.target.value);\r\n        \r\n    }\r\n\r\n    //correct option handler\r\n\r\n    const correctOptionChangeHandler =(questionId,optionId)=>{\r\n\r\n        let question ={};\r\n\r\n        questions.forEach((q)=>{if(q.id===questionId){\r\n\r\n            question = q;\r\n        }})\r\n\r\n        question.options.forEach((o)=>{\r\n\r\n            if(o.id===optionId){\r\n\r\n\r\n                o.isCorrect=!o.isCorrect;\r\n            }\r\n        })\r\n\r\n        const indexes = questions.map((q)=>{return q.id});\r\n\r\n        const replacableIndex= indexes.indexOf(questionId);\r\n  \r\n        const allQuestions =[...questions];\r\n  \r\n        allQuestions.splice(replacableIndex,1,question);\r\n  \r\n        setQuestions(allQuestions)\r\n  \r\n\r\n\r\n    }\r\n\r\n    // delete option handler\r\n    const deleteOptionHandler = (questionId,optionId)=>{\r\n\r\n        let question ={};\r\n        questions.forEach((q)=>{if(q.id===questionId){\r\n\r\n            question = q;\r\n        }})\r\n\r\n        const optionIds = question.options.map((o)=>{return o.id});\r\n\r\n        const removableIndex= optionIds.indexOf(optionId);\r\n\r\n        const oldOptions =[...question.options];\r\n        oldOptions.splice(removableIndex,1);\r\n\r\n        question.options = oldOptions;\r\n\r\n        \r\n        const indexes = questions.map((q)=>{return q.id});\r\n\r\n      const replacableIndex= indexes.indexOf(questionId);\r\n\r\n      const allQuestions =[...questions];\r\n\r\n      allQuestions.splice(replacableIndex,1,question);\r\n\r\n      setQuestions(allQuestions)\r\n\r\n\r\n    }\r\n\r\n\r\n    // delete question handler \r\n    const deleteQuestionHandler = (questionId)=>{\r\n\r\n\r\n        const oldQuestions = [...questions];\r\n        const indexes = questions.map((q)=>{return q.id});\r\n\r\n        const replacableIndex= indexes.indexOf(questionId);\r\n\r\n        oldQuestions.splice(replacableIndex,1);\r\n        setQuestions(oldQuestions);\r\n  \r\n        \r\n\r\n    }\r\n    //question text change\r\n    const questionTextChange=(e,id)=>{\r\n\r\n        const oldQuestion = [...questions]\r\n        for (let q in oldQuestion){\r\n            if(oldQuestion[q].id===id ){\r\n                oldQuestion[q].title = e.target.value;\r\n                break;\r\n            }\r\n        }\r\n        setQuestions(oldQuestion);\r\n    }\r\n\r\n\r\n    //optiontextchange\r\n    const optionTextChangeHandler =(e,questionId,optionId)=>{\r\n\r\n        let question ={};\r\n\r\n        questions.forEach((q)=>{\r\n            if(q.id===questionId){\r\n\r\n                 question = q;\r\n            }\r\n        })\r\n\r\n        question.options.forEach((o)=>{\r\n\r\n            if(o.id===optionId){\r\n\r\n                o.title = e.target.value;\r\n            }\r\n        })\r\n\r\n        \r\n     const indexes = questions.map((q)=>{return q.id});\r\n\r\n      const replacableIndex= indexes.indexOf(questionId);\r\n\r\n      const allQuestions =[...questions];\r\n\r\n      allQuestions.splice(replacableIndex,1,question);\r\n\r\n      setQuestions(allQuestions)\r\n\r\n        \r\n\r\n\r\n    }\r\n    //create option\r\n    const createOption=(questionId)=>{\r\n\r\n       const option ={\r\n        id : generateKey(Math.random()),\r\n        title : \"\",\r\n        isCorrect : false\r\n       }\r\n\r\n       let question ={};\r\n\r\n       questions.forEach((q)=>{\r\n\r\n        if(q.id===questionId){\r\n            question =q;\r\n        }\r\n       })\r\n\r\n       \r\n\r\n       const options = [...question.options]\r\n\r\n       options.push(option);\r\n      // const newOptions =[...options,option];\r\n       question.options=options;\r\n\r\n       const indexes = questions.map((q)=>{return q.id});\r\n\r\n      const replacableIndex= indexes.indexOf(questionId);\r\n\r\n      const allQuestions =[...questions];\r\n\r\n      allQuestions.splice(replacableIndex,1,question);\r\n\r\n      setQuestions(allQuestions)\r\n\r\n\r\n    }\r\n    //create question\r\n    const createQuestion= ()=>{\r\n\r\n\r\n        const question ={\r\n            id : generateKey(Math.random()),\r\n            title :\"\",\r\n            options:[]\r\n        }\r\n\r\n    \r\n\r\n    \r\n\r\n    \r\n        const contents = [...questions,question];\r\n\r\n        setQuestions(contents);\r\n\r\n    }\r\n\r\n  //  const [Questions,setQuestions] = useState();\r\n\r\n  const  generateKey = (pre) => {\r\n        return `${ pre }_${ new Date().getTime() }`\r\n  }\r\n\r\n\r\n    return(<div>\r\n\r\n        <quizContext.Provider\r\n         value={ {generateKey,createQuestion,questions,\r\n            correctOptionChangeHandler,\r\n            quizTitle,\r\n            quizDurationChange,\r\n            quizTitleChange,\r\n            optionTextChangeHandler,\r\n            deleteQuestionHandler,\r\n            deleteOptionHandler,\r\n            setQuizTitle,\r\n            setQuestions,\r\n            setDuration,\r\n            setLoginToken,setLoggedInUserId,\r\n             loggedInUserId, \r\n             quizDuration : duration,\r\n            loginToken,registerUser,\r\n            confirmLogin,confirmLogout,\r\n         questionTextChange,createOption }} >\r\n            {props.children}\r\n        </quizContext.Provider>\r\n    </div>)\r\n}\r\n\r\nexport default ContextProvider\r\n","/home/reza/QuizAPI/client/src/component/Navigation/Header.js",["83","84","85","86","87","88","89","90","91"],"import React,{useContext,useState,useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faPaperclip} from '@fortawesome/free-solid-svg-icons'\r\nimport {Navbar,Nav,NavDropdown,Form,FormControl,Button} from 'react-bootstrap'\r\nimport {quizContext} from '../../contexts/quizContext'\r\nconst Navigation = ()=>{\r\n\r\n // console.log(\"from navigation\")\r\n\r\n  const {loginToken,loggedInUserId,confirmLogout} = useContext(quizContext)\r\n  \r\nreturn (<div  >\r\n    <Navbar bg=\"info\" variant=\"dark\"  expand=\"lg\">\r\n  <Navbar.Brand ><h2> Quizophile</h2> </Navbar.Brand>\r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link ><Link to=\"/\" style={{color:\"white\"}} ><h4>Home</h4></Link></Nav.Link>\r\n      {loginToken?<Nav.Link ><Link to=\"/makequiz\" style={{color:\"white\"}}  >\r\n      <h4>Make Quiz</h4>\r\n      </Link></Nav.Link>:null }\r\n      <Nav.Link ><Link to=\"/answerquiz\" style={{color:\"white\"}}  >\r\n        <h4>Answer Quiz</h4>  \r\n      </Link></Nav.Link>\r\n     \r\n    </Nav>\r\n     \r\n     {!loginToken?\r\n     <Nav>\r\n      <Nav.Link ><Link to=\"/login\" style={{color:\"white\"}}  ><h4>Log In</h4></Link></Nav.Link> \r\n      <Nav.Link  ><Link to=\"/signup\" style={{color:\"white\"}}  ><h4>Sign Up</h4></Link></Nav.Link>\r\n      </Nav> \r\n      :\r\n      <Nav>\r\n        <Nav.Link><Link to={`/developer/${loggedInUserId}`}\r\n         style={{color:\"white\"}}   ><h4>User</h4></Link></Nav.Link>\r\n      <Nav.Link ><Link to=\"/login\" style={{color:\"white\"}}\r\n      onClick={()=>{confirmLogout()}}\r\n       ><h4>Log Out </h4></Link></Nav.Link>\r\n      </Nav>\r\n    }\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n    </div>)\r\n\r\n}\r\n\r\nexport default Navigation","/home/reza/QuizAPI/client/src/component/Questions/questions.js",["92","93"],"import React ,{useState,useEffect,useContext} from 'react'\r\nimport {quizContext} from '../../contexts/quizContext'\r\nimport {Button,Form,Modal} from 'react-bootstrap'\r\nimport Question from '../Question/question'\r\nimport {Redirect} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport './questions.css'\r\nimport { faBatteryThreeQuarters } from '@fortawesome/free-solid-svg-icons'\r\nconst Questions= ()=>{\r\n\r\n\r\n   const{quizDuration,setQuizTitle,setQuestions,setDuration ,quizTitle,quizDurationChange,questionTextChange,quizTitleChange ,questions,createQuestion,loginToken } = useContext(quizContext);\r\n   const [willShowModal,setWillShowModal] = useState(false)\r\n   \r\n\r\n   const closeModal = ()=>{\r\n\r\n    setWillShowModal(false);\r\n\r\n   }\r\n\r\n\r\n   \r\n   const quizSubmitHandler = ()=>{\r\n\r\n    \r\n    const postData = async ()=>{\r\n\r\n        try{\r\n            console.log(\"questions\",questions)\r\n          const res=  await axios.post('/quiz',{\r\n\r\n           \r\n            title : quizTitle,\r\n            questions : questions,\r\n            duration: quizDuration\r\n           \r\n\r\n          },{headers:{\r\n\r\n            xAuthToken:loginToken\r\n          }} );\r\n          console.log(\"from questions.js,created quiz \",res);\r\n          setQuizTitle(\"\")\r\n          setQuestions([])\r\n          setDuration(\"\")\r\n          setWillShowModal(true)\r\n\r\n        }\r\n        catch(error){\r\n\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    if(loginToken){\r\n        postData()\r\n    }\r\n   }\r\n\r\n   return(<div style={{textAlign:\"center\" , marginTop:\"2%\",  }} \r\n   className=\"container \">\r\n\r\n\r\n<div style={{\r\n    backgroundColor:\"\"\r\n}}  className=\"questions\" >\r\n\r\n\r\n<div className=\"questionModal\" >\r\n<Modal show={willShowModal} \r\nonHide={closeModal} \r\nbackdrop=\"static\"\r\n keyboard={false}\r\nanimation={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={closeModal}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\"  >\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n</div>\r\n\r\n    {loginToken?\r\n    <div>\r\n\r\n<Button onClick={createQuestion}  variant=\"info\" style={{width:\"100%\" , marginBottom:\"2%\"}} >{questions.length>0? \"Add Question\" : \"Start\"} </Button>\r\n\r\n{questions.length> 0? \r\n\r\n        <div>\r\n            <Form.Group>\r\n            \r\n            <Form.Control type=\"text\" size=\"lg\" \r\n            style={{width:\"100%\"}}\r\n            value={quizTitle} onChange={(e)=>{quizTitleChange(e) }}\r\n            placeholder=\"Quiz Title\" />\r\n            \r\n            </Form.Group>\r\n            <Form.Group>\r\n            \r\n            <Form.Control type=\"number\" \r\n            style={{width:\"100%\"}}\r\n            min={5}\r\n            size=\"sm\"\r\n            value={quizDuration}\r\n            onChange={quizDurationChange}\r\n            placeholder=\"duration\" />\r\n            \r\n            </Form.Group>\r\n        </div>\r\n        \r\n\r\n            \r\n:null}\r\n\r\n{\r\n    questions.map((q,index)=>{\r\n        return(<div  key={q.id} >\r\n                <Question\r\n                \r\n                questionNo={index+1}\r\n                textChange={questionTextChange}\r\n                title ={q.title}\r\n                options ={q.options}\r\n                id={q.id}\r\n                ></Question>\r\n\r\n            </div>)\r\n    })\r\n    \r\n}\r\n{questions.length>0?\r\n\r\n<Button variant=\"secondary\" onClick={quizSubmitHandler}  style={{width:\"100%\" , marginBottom:\"2%\"}} >Submit</Button> :null\r\n\r\n}\r\n\r\n    </div>\r\n    \r\n    :<Redirect to=\"/\"  /> }\r\n\r\n\r\n</div>\r\n\r\n\r\n   </div>)\r\n   \r\n\r\n}\r\n\r\nexport default Questions","/home/reza/QuizAPI/client/src/component/LogIn/login.js",["94","95","96"],"import React,{useState,useContext} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nimport axios from 'axios'\r\nimport Navigation from '../Navigation/Header'\r\nimport {Form,ToggleButton,Button} from 'react-bootstrap'\r\nimport {quizContext} from '../../contexts/quizContext'\r\nimport Error from'./error'\r\nimport './login.css'\r\n\r\nconst Login = ()=>{\r\n\r\n    const [email,setEmail]=useState(\"\");\r\n    const[password,setrPassword] = useState(\"\");\r\n    const [redirectHome,setRedirectHome]=useState(false);\r\n    const [redirectError,setRedirectError]=useState(false);\r\n    //const [selectedLoginType,setSelectedLoginType] = useState(\"student\")\r\n    const {loginToken,confirmLogin} = useContext(quizContext)\r\n\r\n    // const radios = [\r\n    //   { name: \"student\", value: \"student\" },\r\n    //   { name: \"user\", value: \"user\" },\r\n      \r\n    // ];\r\n\r\n   // console.log(\"from log in\")\r\n    \r\n    const render = ()=>{\r\n        if(redirectHome)\r\n       {\r\n       return <Redirect to=\"makquiz\" /> \r\n    }\r\n    else if (redirectError){\r\n        return <Redirect to=\"login/error\" />\r\n    }\r\n      }\r\n      \r\n    const emailChangeHandler = (e)=>{\r\n        setEmail(e.target.value)\r\n    }\r\n    const passwordChangeHandler = (e)=>{\r\n\r\n        setrPassword(e.target.value)\r\n    }\r\n\r\n    const formSubmitHandler = async (e)=>{\r\n        e.preventDefault();\r\n\r\n        \r\n        try{\r\n          let loginToken=\"\";\r\n\r\n          \r\n           loginToken=await axios.post('/auth/student',{email,password})\r\n\r\n\r\n          \r\n            \r\n\r\n            // console.log(\"logintoken from login.js\",loginToken.data.token)\r\n\r\n            // const user = await axios.get('/auth',{\r\n\r\n            //     headers:{\r\n            //         xAuthToken:loginToken.data.token\r\n            //     }\r\n            // })\r\n            // console.log(\"user is\",user)\r\n\r\n            confirmLogin(loginToken.data.token,);\r\n            setEmail(\"\");\r\n            setrPassword(\"\");\r\n            setRedirectHome(true);\r\n            setRedirectError(false);\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n            setRedirectHome(false)\r\n            setRedirectError(true)\r\n            \r\n        }\r\n\r\n        \r\n    }\r\n    return(<div className=\"login\">\r\n\r\n    \r\n      {!loginToken?\r\n      <div>\r\n        <h1>Login</h1>\r\n<Form onSubmit={(e)=>{formSubmitHandler(e)}} >\r\n\r\n\r\n\r\n  <Form.Group controlId=\"formBasicEmail\">\r\n\r\n    <Form.Label>Email address</Form.Label>\r\n    <Form.Control type=\"email\" value={email} required={true} onChange={(e)=>{emailChangeHandler(e)}} placeholder=\"Enter email\" />\r\n    <Form.Text className=\"text-muted\">\r\n      We'll never share your email with anyone else.\r\n    </Form.Text>\r\n  </Form.Group>\r\n\r\n  <Form.Group controlId=\"formBasicPassword\">\r\n    <Form.Label>Password</Form.Label>\r\n    <Form.Control type=\"password\" required={true} placeholder=\"Password\"\r\n     value={password} onChange ={(e)=>{passwordChangeHandler(e)}} />\r\n  </Form.Group>\r\n  \r\n  \r\n \r\n\r\n\r\n  <Button variant=\"primary\" type=\"submit\">\r\n    Log In\r\n  </Button>\r\n</Form>\r\n{render()}\r\n        </div>\r\n    \r\n    : <Redirect  to =\"/\" />\r\n    }\r\n    </div>)\r\n}\r\n\r\nexport default Login","/home/reza/QuizAPI/client/src/component/Index/index.js",["97","98"],"import React, { useState ,useContext, useEffect} from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {quizContext} from '../../contexts/quizContext'\r\nimport Login from '../LogIn/login'\r\n\r\nconst Index = ()=>{\r\n\r\n     const {loginToken} = useContext(quizContext)\r\n    \r\n    console.log('login token is',loginToken)\r\n    return(<div>\r\n\r\n       {loginToken? <Redirect to=\"/makequiz\" /> \r\n    : <Login /> \r\n\r\n    \r\n    }\r\n    </div>)\r\n}\r\n\r\nexport default Index","/home/reza/QuizAPI/client/src/component/QuizMaker/quizmaker.js",["99","100","101","102","103","104","105","106"],"/home/reza/QuizAPI/client/src/component/QuizFeed/quizfeed.js",["107","108"],"import React ,{useContext,useState,useEffect} from 'react'\r\nimport {quizContext} from '../../contexts/quizContext'\r\nimport QuizCard from '../QuizCard/quizcard'\r\nimport './quizFeed.css'\r\nimport axios from 'axios'\r\nconst QuizFeed = ()=>{\r\n\r\n   \r\n    const [quizzes,setQuizzes] = useState([{title:\"\",questions:[],duration:\"\"}]);\r\n\r\n    useEffect(()=>{\r\n\r\n        console.log(\"from quiz feed\")\r\n        const getQuiz = async ()=>{\r\n\r\n            try{\r\n\r\n                const quizContent = await axios.get('/quiz');\r\n                console.log(\"quiz content \",quizContent);\r\n                setQuizzes(quizContent.data);\r\n\r\n            }\r\n\r\n            catch(error){\r\n\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        getQuiz();\r\n    },[])\r\n\r\n\r\n    return(<div className=\"container quizFlex\" >\r\n\r\n\r\n        {quizzes.map((q)=>{\r\n\r\n            return(<QuizCard \r\n                title={q.title} \r\n                duration ={q.duration}\r\n                quizId ={q._id}\r\n                key={q._id}\r\n                \r\n            >\r\n\r\n            </QuizCard>)\r\n        })}\r\n\r\n    </div>)\r\n\r\n}\r\n\r\nexport default QuizFeed","/home/reza/QuizAPI/client/src/component/SignUp/signup.js",["109"],"import React,{useState,useEffect,useContext} from 'react'\r\nimport axios from 'axios'\r\nimport {Form,FormControl,Button} from 'react-bootstrap'\r\nimport {Redirect,withRouter} from 'react-router-dom'\r\nimport {quizContext} from '../../contexts/quizContext'\r\nimport \"./signup.css\"\r\nconst SignUp = (props)=>{\r\n\r\n    \r\n    const [name,setName]=useState(\"\");\r\n    const [email,setEmail] = useState(\"\");\r\n    const[willRedirect,setWillRedirect] = useState(false)\r\n    const[password,setPassword] = useState(\"\");\r\n    const {registerUser,loginToken} = useContext(quizContext);\r\n    const [loggedIn,setLoggedIn] = useState(false)\r\n  console.log(\"from sign up\",loggedIn,loginToken)  \r\n  useEffect(()=>{\r\n\r\n    if(loginToken){\r\n      setLoggedIn(true);\r\n     \r\n    }\r\n    console.log(\"from signup useEffect\")\r\n  },[loginToken])\r\n\r\n    const nameChangeHandler =(e)=>{\r\n\r\n        setName(e.target.value);\r\n    }\r\n\r\n    const emailChangeHandler = (e)=>{\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const passwordChangeHandler= (e)=>{\r\n\r\n        setPassword(e.target.value)\r\n    }\r\n    const formSubmitHandler = (e)=>{\r\n\r\n        e.preventDefault();\r\n        \r\n        axios.post('/user/register',{\r\n            name,\r\n            email,\r\n            password\r\n        }).then((res)=>{\r\n          registerUser(res.data.token)\r\n         console.log(res)\r\n         setName(\"\");\r\n         setPassword(\"\");\r\n         setEmail(\"\");\r\n         setWillRedirect(true);\r\n       // props.hisotry.push('/')\r\n        }).catch((err)=>{console.log(err)})\r\n        \r\n        \r\n    }\r\n\r\n    const render = ()=>{\r\n\r\n      return <Redirect to=\"login\" />\r\n    }\r\nreturn(<div className=\"signup\">\r\n\r\n\r\n{loginToken?<Redirect to=\"/\" /> : \r\n\r\n\r\n   <div> \r\n     <h1>Sign Up</h1>\r\n     \r\n\r\n     <Form action={render} onSubmit={ (e)=>{formSubmitHandler(e)}} >\r\n\r\n\r\n<Form.Group controlId=\"formBasicCheckbox\">\r\n  <Form.Control value ={name} name=\"name\" onChange={(e)=>{nameChangeHandler(e)} } \r\n  type=\"text\" placeholder=\"Enter Name\" />\r\n</Form.Group>\r\n\r\n\r\n<Form.Group controlId=\"formBasicEmail\">\r\n  <Form.Control value={email} name=\"email\" required={true} onChange={(e)=>{emailChangeHandler(e)}} type=\"email\" placeholder=\"Enter email\" />\r\n  <Form.Text className=\"text-muted\">\r\n    We'll never share your email with anyone else.\r\n  </Form.Text>\r\n</Form.Group>\r\n\r\n\r\n<Form.Group controlId=\"formBasicPassword\">\r\n  \r\n  <Form.Control type=\"password\" placeholder=\"Password\"\r\n  value={password} required={true} onChange={(e)=>{passwordChangeHandler(e)}}  name=\"password\"\r\n  /></Form.Group>\r\n\r\n<Button variant=\"primary\" type=\"submit\">\r\n  Submit\r\n</Button>\r\n</Form>\r\n   </div>\r\n\r\n}\r\n\r\n{willRedirect? render():null}\r\n\r\n</div>)\r\n\r\n}\r\n\r\nexport default withRouter(SignUp)","/home/reza/QuizAPI/client/src/component/LogIn/error.js",[],"/home/reza/QuizAPI/client/src/component/QuizMaker/testquestion.js",["110","111","112","113","114","115","116","117"],"import React ,{useContext,useState,useEffect} from 'react'\r\nimport {quizContext} from '../../contexts/quizContext'\r\nimport {Modal,Button} from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport { Redirect } from 'react-router-dom'\r\nimport './testQuestion.css'\r\n\r\nconst TestQuestion = (props)=>{\r\n\r\nreturn(<div>\r\n\r\n    <div className=\"test-question\" >\r\n        <h3>{props.questionNo +\". \"+ props.title  } </h3>\r\n    </div>\r\n\r\n    <div className=\"test-question-option\" >\r\n\r\n\r\n        {props.options.map((option,index)=>{\r\n\r\n            return(<div key={option._id}>\r\n                    <input type=\"radio\" \r\n                    onChange={()=>{props.selectedOptionHandler(option._id)  } }\r\n                    id={option._id}\r\n                    \r\n                    value={option._id} name={props.questionId}  />     \r\n                    <label for={option._id}  > {\" \"+option.title}\r\n                    \r\n                     </label>              \r\n                </div>)\r\n        })}\r\n    </div>\r\n\r\n</div>)\r\n\r\n}\r\n\r\n\r\nexport default TestQuestion","/home/reza/QuizAPI/client/src/component/Question/question.js",["118","119"],"import React ,{useState,useEffect,useContext} from 'react'\r\nimport {quizContext} from '../../contexts/quizContext'\r\nimport {Button,Form} from 'react-bootstrap'\r\nimport Option from '../Option/option'\r\nimport './question.css'\r\nconst Question= (props)=>{\r\n\r\n\r\n   const{optionTextChangeHandler,createOption,deleteQuestionHandler  } = useContext(quizContext);\r\n\r\n   return(<div className=\"jumbotron question\"   >\r\n\r\n\r\n    <div className=\"question-text\" >\r\n\r\n         <h5 style={{color:\"white\"}} >\r\n            {\"#\"+props.questionNo +\".\" }\r\n          </h5>\r\n         <Form.Group>\r\n            \r\n        <Form.Control type=\"text\" size=\"lg\" \r\n        style={{width:\"100%\"}}\r\n        value={props.title} onChange={(e)=>{props.textChange(e,props.id) }}\r\n        placeholder=\"Question\" />\r\n        \r\n        </Form.Group>\r\n    </div>\r\n\r\n  \r\n   \r\n    {props.options.map((o)=>{\r\n\r\n        return(<div>\r\n            \r\n            <Option\r\n            title={o.title}\r\n            \r\n            id={o.id}\r\n            questionId ={props.id}\r\n            optionTextChange={optionTextChangeHandler}\r\n            isCorrect={o.isCorrect}\r\n            ></Option>\r\n            </div>)\r\n    })}\r\n\r\n    <Button  variant=\"danger\" onClick={()=>{deleteQuestionHandler(props.id)}}> Delete Question </Button>\r\n    <Button variant=\"primary\" onClick={()=>{createOption(props.id)} } >Add Option</Button>\r\n\r\n   </div>)\r\n   \r\n\r\n}\r\n\r\nexport default Question","/home/reza/QuizAPI/client/src/component/QuizCard/quizcard.js",["120","121","122"],"import React,{useState,useEffect,useContext} from 'react' \r\nimport {Card,Button} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nconst QuizCard = (props)=>{\r\n\r\n    \r\n    return(<div className=\"quizCard\" >\r\n\r\n<Card style={{ width: \"100%\" ,margin:\"3% 0%\" }}>\r\n \r\n  <Card.Body>\r\n    <Card.Title>{props.title}</Card.Title>\r\n    <Card.Text>\r\n      duration : {props.duration} min\r\n    </Card.Text>\r\n    <Button variant=\"primary\"  >\r\n\r\n        <Link to={`/quiz/${props.quizId}`} style={{color:\"white\"}} > \r\n        Start\r\n        </Link>\r\n    </Button>\r\n  </Card.Body>\r\n</Card>\r\n    </div>)\r\n\r\n}\r\n\r\nexport default QuizCard","/home/reza/QuizAPI/client/src/component/Option/option.js",["123","124","125"],"import React ,{useState,useEffect,useContext,createRef} from 'react'\r\nimport {quizContext} from '../../contexts/quizContext'\r\nimport {Button,Form} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faTrash,faCheckCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport './option.css'\r\nconst Option = (props)=>{\r\n\r\n   // const [correctButtonText,setCorrectButtonText] =useState(false)\r\n    \r\n    //console.log(\"from option\")\r\n    const {correctOptionChangeHandler,deleteOptionHandler} =useContext(quizContext)\r\n\r\n    \r\n\r\n   return(<div className=\"option-flex\" >\r\n\r\n\r\n       <div className=\"option-text\">\r\n       <Form.Group>\r\n        \r\n        <Form.Control  type=\"text\" placeholder=\"Option\" \r\n        value={props.title}\r\n        style={{width:\"100%\"}}\r\n        onChange={(e)=>{props.optionTextChange(e, props.questionId, props.id)} }\r\n        />\r\n        </Form.Group>\r\n\r\n       </div>\r\n       \r\n       \r\n      <div className=\"optionButton\" > \r\n      <Button  variant=\"light\"  type=\"button\" \r\n        onClick={()=>{deleteOptionHandler(props.questionId,props.id)}}> \r\n            <FontAwesomeIcon icon={faTrash}/>\r\n        </Button>  \r\n      </div>\r\n       \r\n      <div>\r\n      <Button className=\"optionButton\" \r\n       variant ={props.isCorrect?\"success\":\"info\"}\r\n       onClick={()=>{\r\n           \r\n           correctOptionChangeHandler(props.questionId, props.id)\r\n           \r\n           }} >\r\n           \r\n           <FontAwesomeIcon icon={faCheckCircle} /> \r\n           \r\n     </Button>\r\n      </div>\r\n   </div>)\r\n}\r\n\r\nexport default Option",{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":1,"column":18,"nodeType":"132","messageId":"133","endLine":1,"endColumn":27},{"ruleId":"130","severity":1,"message":"134","line":15,"column":12,"nodeType":"132","messageId":"133","endLine":15,"endColumn":17},{"ruleId":"130","severity":1,"message":"135","line":1,"column":26,"nodeType":"132","messageId":"133","endLine":1,"endColumn":34},{"ruleId":"130","severity":1,"message":"136","line":1,"column":35,"nodeType":"132","messageId":"133","endLine":1,"endColumn":44},{"ruleId":"130","severity":1,"message":"137","line":3,"column":8,"nodeType":"132","messageId":"133","endLine":3,"endColumn":13},{"ruleId":"130","severity":1,"message":"138","line":4,"column":10,"nodeType":"132","messageId":"133","endLine":4,"endColumn":25},{"ruleId":"130","severity":1,"message":"139","line":5,"column":9,"nodeType":"132","messageId":"133","endLine":5,"endColumn":20},{"ruleId":"130","severity":1,"message":"140","line":6,"column":20,"nodeType":"132","messageId":"133","endLine":6,"endColumn":31},{"ruleId":"130","severity":1,"message":"141","line":6,"column":32,"nodeType":"132","messageId":"133","endLine":6,"endColumn":36},{"ruleId":"130","severity":1,"message":"142","line":6,"column":37,"nodeType":"132","messageId":"133","endLine":6,"endColumn":48},{"ruleId":"130","severity":1,"message":"143","line":6,"column":49,"nodeType":"132","messageId":"133","endLine":6,"endColumn":55},{"ruleId":"130","severity":1,"message":"136","line":1,"column":25,"nodeType":"132","messageId":"133","endLine":1,"endColumn":34},{"ruleId":"130","severity":1,"message":"144","line":8,"column":10,"nodeType":"132","messageId":"133","endLine":8,"endColumn":32},{"ruleId":"130","severity":1,"message":"145","line":5,"column":8,"nodeType":"132","messageId":"133","endLine":5,"endColumn":18},{"ruleId":"130","severity":1,"message":"146","line":6,"column":14,"nodeType":"132","messageId":"133","endLine":6,"endColumn":26},{"ruleId":"130","severity":1,"message":"147","line":8,"column":8,"nodeType":"132","messageId":"133","endLine":8,"endColumn":13},{"ruleId":"130","severity":1,"message":"135","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":25},{"ruleId":"130","severity":1,"message":"136","line":1,"column":39,"nodeType":"132","messageId":"133","endLine":1,"endColumn":48},{"ruleId":"130","severity":1,"message":"148","line":1,"column":16,"nodeType":"132","messageId":"133","endLine":1,"endColumn":26},{"ruleId":"130","severity":1,"message":"149","line":2,"column":9,"nodeType":"132","messageId":"133","endLine":2,"endColumn":20},{"ruleId":"130","severity":1,"message":"150","line":9,"column":31,"nodeType":"132","messageId":"133","endLine":9,"endColumn":42},{"ruleId":"130","severity":1,"message":"151","line":18,"column":12,"nodeType":"132","messageId":"133","endLine":18,"endColumn":22},{"ruleId":"130","severity":1,"message":"152","line":18,"column":23,"nodeType":"132","messageId":"133","endLine":18,"endColumn":36},{"ruleId":"130","severity":1,"message":"153","line":26,"column":9,"nodeType":"132","messageId":"133","endLine":26,"endColumn":29},{"ruleId":"154","severity":1,"message":"155","line":61,"column":7,"nodeType":"156","endLine":61,"endColumn":9,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":260,"column":51,"nodeType":"160","messageId":"161","endLine":260,"endColumn":53},{"ruleId":"130","severity":1,"message":"148","line":1,"column":16,"nodeType":"132","messageId":"133","endLine":1,"endColumn":26},{"ruleId":"130","severity":1,"message":"149","line":2,"column":9,"nodeType":"132","messageId":"133","endLine":2,"endColumn":20},{"ruleId":"130","severity":1,"message":"142","line":3,"column":14,"nodeType":"132","messageId":"133","endLine":3,"endColumn":25},{"ruleId":"130","severity":1,"message":"148","line":1,"column":16,"nodeType":"132","messageId":"133","endLine":1,"endColumn":26},{"ruleId":"130","severity":1,"message":"135","line":1,"column":27,"nodeType":"132","messageId":"133","endLine":1,"endColumn":35},{"ruleId":"130","severity":1,"message":"136","line":1,"column":36,"nodeType":"132","messageId":"133","endLine":1,"endColumn":45},{"ruleId":"130","severity":1,"message":"149","line":2,"column":9,"nodeType":"132","messageId":"133","endLine":2,"endColumn":20},{"ruleId":"130","severity":1,"message":"162","line":3,"column":9,"nodeType":"132","messageId":"133","endLine":3,"endColumn":14},{"ruleId":"130","severity":1,"message":"143","line":3,"column":15,"nodeType":"132","messageId":"133","endLine":3,"endColumn":21},{"ruleId":"130","severity":1,"message":"137","line":4,"column":8,"nodeType":"132","messageId":"133","endLine":4,"endColumn":13},{"ruleId":"130","severity":1,"message":"163","line":5,"column":10,"nodeType":"132","messageId":"133","endLine":5,"endColumn":18},{"ruleId":"130","severity":1,"message":"135","line":1,"column":16,"nodeType":"132","messageId":"133","endLine":1,"endColumn":24},{"ruleId":"130","severity":1,"message":"136","line":1,"column":25,"nodeType":"132","messageId":"133","endLine":1,"endColumn":34},{"ruleId":"130","severity":1,"message":"135","line":1,"column":15,"nodeType":"132","messageId":"133","endLine":1,"endColumn":23},{"ruleId":"130","severity":1,"message":"136","line":1,"column":24,"nodeType":"132","messageId":"133","endLine":1,"endColumn":33},{"ruleId":"130","severity":1,"message":"148","line":1,"column":34,"nodeType":"132","messageId":"133","endLine":1,"endColumn":44},{"ruleId":"130","severity":1,"message":"135","line":1,"column":16,"nodeType":"132","messageId":"133","endLine":1,"endColumn":24},{"ruleId":"130","severity":1,"message":"136","line":1,"column":25,"nodeType":"132","messageId":"133","endLine":1,"endColumn":34},{"ruleId":"130","severity":1,"message":"164","line":1,"column":46,"nodeType":"132","messageId":"133","endLine":1,"endColumn":55},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faPaperclip' is defined but never used.","'NavDropdown' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'faBatteryThreeQuarters' is defined but never used.","'Navigation' is defined but never used.","'ToggleButton' is defined but never used.","'Error' is defined but never used.","'useContext' is defined but never used.","'quizContext' is defined but never used.","'buildStyles' is defined but never used.","'startAgain' is assigned a value but never used.","'setStartAgain' is assigned a value but never used.","'handleShowResultShow' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["167"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Modal' is defined but never used.","'Redirect' is defined but never used.","'createRef' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},"Update the dependencies array to be: [id]",{"range":"170","text":"171"},[1918,1920],"[id]"]